version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: postgres-voz-cidada
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=voz-cidada
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
    volumes:
      - postgres-data:/var/lib/postgresql/data

  app:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - elasticsearch
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/voz-cidada
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
    volumes:
      - uploads-data:/app/uploads
      - ./server/logs:/app/logs

  web:
    build: ./client
    ports:
      - "5173:80"
    depends_on:
      - app

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300

  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.2
    container_name: logstash
    command: logstash -f /usr/share/logstash/pipeline/pipeline.conf
    volumes:
      - ./logstash/pipeline.conf:/usr/share/logstash/pipeline/pipeline.conf
      - ./server/logs:/app/logs
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
    environment:
      LS_JAVA_OPTS: "-Xms256m -Xmx256m"
    depends_on:
      - elasticsearch
      - app

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.2
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    depends_on:
      - elasticsearch

volumes:
  postgres-data:
  uploads-data:
  elasticsearch-data:
